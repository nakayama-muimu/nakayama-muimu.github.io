// Generated by Haxe 3.4.7
(function ($hx_exports) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var J2x_$lang = $hx_exports["J2x_lang"] = function() { };
J2x_$lang.u = function(c) {
	return String.fromCharCode(c);
};
J2x_$lang.getC = function(s,idx) {
	var c = HxOverrides.cca(s,idx);
	if(c > 12448) {
		return c - 12448;
	} else {
		return c - 12352;
	}
};
J2x_$lang.phon2roman = function(sPhonArray,capitalizeIntial) {
	if(capitalizeIntial == null) {
		capitalizeIntial = true;
	}
	var ar = [];
	var _g1 = 0;
	var _g = sPhonArray.length;
	while(_g1 < _g) {
		var i = _g1++;
		var syl = sPhonArray[i];
		if(syl == "#tsu" && i < sPhonArray.length - 1) {
			ar.push(sPhonArray[i + 1].charAt(0));
		} else if(syl == "n#") {
			ar.push("n");
		} else if(syl == "#-" && i != 0) {
			ar.push(sPhonArray[i - 1].charAt(sPhonArray[i - 1].length - 1));
		} else {
			ar.push(syl);
		}
	}
	var s = ar.join("");
	if(!capitalizeIntial) {
		return s;
	}
	var ret = "";
	var after_space = true;
	var sokuon = false;
	var i1 = 0;
	while(i1 < s.length) {
		var c = HxOverrides.cca(s,i1);
		if(c >= 97 && c <= 122) {
			if(after_space) {
				ret += J2x_$lang.u(c - 32);
				after_space = false;
			} else {
				ret += s.charAt(i1);
			}
		} else {
			if(s.charAt(i1) == "%") {
				var i2 = i1 + 1;
				while(i2 < s.length) {
					if(s.charAt(i2) == "%") {
						break;
					}
					++i2;
				}
				ret += s.substring(i1 + 1,i2);
				i1 = i2 + 1;
				after_space = true;
				continue;
			}
			ret += s.charAt(i1);
			after_space = true;
		}
		++i1;
	}
	return ret;
};
J2x_$lang.hira2phonArray = function(hira,shorten) {
	if(shorten == null) {
		shorten = true;
	}
	var ret = [];
	var i = 0;
	while(i < hira.length) {
		var c = J2x_$lang.getC(hira,i);
		if(c < 1 || c > 83) {
			var _g = hira.charAt(i);
			switch(_g) {
			case " ":
				ret.push(" ");
				break;
			case "%":
				var i2 = i + 1;
				while(i2 < hira.length) {
					if(hira.charAt(i2) == "%") {
						break;
					}
					++i2;
				}
				ret.push(hira.substring(i,i2));
				i = i2;
				break;
			case "'":
				ret.push("");
				break;
			case "　":
				ret.push(" ");
				break;
			case "ー":
				ret.push("#-");
				break;
			default:
				ret.push("?");
			}
		} else {
			if(i < hira.length - 1) {
				var c2 = J2x_$lang.getC(hira,i + 1);
				var idx = J2x_$lang.idan.indexOf(J2x_$lang.uniKana[c]);
				if(idx > 0) {
					var _g1 = J2x_$lang.uniKana[c2];
					switch(_g1) {
					case "@e":
						ret.push(J2x_$lang.phonKana[idx * 9 + 7]);
						i += 2;
						break;
					case "@ya":
						ret.push(J2x_$lang.phonKana[idx * 9 + 5]);
						i += 2;
						break;
					case "@yo":
						ret.push(J2x_$lang.phonKana[idx * 9 + 8]);
						i += 2;
						break;
					case "@yu":
						ret.push(J2x_$lang.phonKana[idx * 9 + 6]);
						i += 2;
						break;
					default:
						ret.push(J2x_$lang.uniKana[c]);
						++i;
					}
					continue;
				}
			}
			if(shorten && ret.length > 0 && (J2x_$lang.uniKana[c] == "o" || J2x_$lang.uniKana[c] == "u")) {
				var s = ret[ret.length - 1];
				if(s.charAt(s.length - 1) == "o") {
					++i;
					continue;
				}
			}
			ret.push(J2x_$lang.uniKana[c]);
		}
		++i;
	}
	return ret;
};
var J2x_$kr = $hx_exports["J2x_kr"] = function() { };
J2x_$kr.u = function(c) {
	return String.fromCharCode(c);
};
J2x_$kr.phon2x = function(sPhonArray) {
	var ret = [];
	var word_head = true;
	var i = 0;
	while(i < sPhonArray.length) {
		var syl = sPhonArray[i];
		var idx = J2x_$lang.phonKana.indexOf(syl);
		if(idx != -1) {
			var idx2 = J2x_$kr.phonKanaAlt.indexOf(syl);
			if(word_head && idx2 != -1) {
				ret.push(J2x_$kr.krKanaAlt[idx2]);
			} else if(syl == "n#") {
				var s = ret[ret.length - 1];
				ret[ret.length - 1] = String.fromCharCode(HxOverrides.cca(s,0) + 4);
			} else {
				ret.push(J2x_$kr.krKana[idx]);
			}
			word_head = false;
		} else {
			word_head = true;
			var s1 = syl.charAt(0);
			if(s1 == "%") {
				ret.push(syl.substring(1,syl.length));
			} else if(syl == "#tsu") {
				var s2 = ret[ret.length - 1];
				ret[ret.length - 1] = String.fromCharCode(HxOverrides.cca(s2,0) + 19);
				word_head = false;
			} else if(s1 != "#") {
				ret.push(syl);
			}
		}
		++i;
	}
	return ret.join("");
};
J2x_$kr.__super__ = J2x_$lang;
J2x_$kr.prototype = $extend(J2x_$lang.prototype,{
});
J2x_$lang.uniKana = ["_","@a","a","@i","i","@u","u","@e","e","@o","o","ka","ga","ki","gi","ku","gu","ke","ge","ko","go","sa","za","shi","ji","su","zu","se","ze","so","zo","ta","da","chi","ji","#tsu","tsu","zu","te","de","to","do","na","ni","nu","ne","no","ha","ba","pa","hi","bi","pi","fu","bu","pu","he","be","pe","ho","bo","po","ma","mi","mu","me","mo","@ya","ya","@yu","yu","@yo","yo","ra","ri","ru","re","ro","#wa","wa","wi","we","wo","n#","vu","#ka","#ke","va","vi","ve","vo","?","?","?","?","?"];
J2x_$lang.idan = ["i","ki","gi","si","shi","zi","ji","ti","chi","tsi","di","ni","hi","fi","bi","vi","pi","mi","yi","ri","wi"];
J2x_$lang.udan = ["u","tsu","fu","vu"];
J2x_$lang.odan = ["o","ko","kyo","so","no","","","","","","","","","","","","","","",""];
J2x_$lang.phonKana = ["a","i","u","e","o","ya","yu","ye","yo","ka","ki","ku","ke","ko","kya","kyu","kye","kyo","ga","gi","gu","ge","go","gya","gyu","gye","gyo","sa","si","su","se","so","sya","syu","sye","syo","sha","shi","shu","she","sho","sha","shu","she","sho","za","zi","zu","ze","zo","zya","zyu","zye","zyo","ja","ji","ju","je","jo","ja","ju","je","jo","ta","ti","tu","te","to","tya","tyu","tye","tyo","cha","chi","chu","che","cho","cha","chu","che","cho","tsa","tsi","tsu","tse","tso","tsya","tsyu","tsye","tsyo","da","di","du","de","do","dya","dyu","dye","dyo","na","ni","nu","ne","no","nya","nyu","nye","nyo","ha","hi","hu","he","ho","hya","hyu","hye","hyo","fa","fi","fu","fe","fo","fya","fyu","fye","fyo","ba","bi","bu","be","bo","bya","byu","bye","byo","va","vi","vu","ve","vo","vya","vyu","vye","vyo","pa","pi","pu","pe","po","pya","pyu","pye","pyo","ma","mi","mu","me","mo","mya","myu","mye","myo","ya","yi","yu","ye","yo","ya","yu","ye","yo","ra","ri","ru","re","ro","rya","ryu","rye","ryo","wa","wi","wu","we","wo","wya","wyu","wye","wyo","n#","kwa","kwi","kwe","kwo","gwa","gwi","gwe","gwo"];
J2x_$kr.krKana = ["아","이","우","에","오","야","유","예","요","카","키","쿠","케","코","캬","큐","켸","쿄","가","기","구","게","고","갸","규","계","교","사","시","수","세","소","샤","슈","셰","쇼","샤","시","슈","셰","쇼","샤","슈","셰","쇼","자","지","주","제","조","쟈","쥬","졔","죠","자","지","주","제","조","쟈","쥬","졔","죠","타","티","투","테","토","차","추","체","초","차","치","추","체","초","챠","츄","쳬","쵸","싸","씨","쑤","쎄","쏘","쌰","쓔","쎼","쑈","다","디","두","데","도","댜","듀","뎨","됴","나","니","누","네","노","냐","뉴","녜","뇨","하","히","후","헤","호","햐","휴","혜","효","화","휘","후","훼","훠","햐","휴","혜","효","바","비","부","베","보","뱌","뷰","볘","뵤","바","비","부","베","보","뱌","뷰","볘","뵤","파","피","푸","페","포","퍄","퓨","폐","표","마","미","무","메","모","먀","뮤","몌","묘","야","야","웨","예","왜","야","유","예","요","라","리","루","레","로","랴","류","례","료","와","위","우","웨","워","위","우","웨","워","ㄴ","콰","퀴","퀘","쿼","과","귀","궤","궈"];
J2x_$kr.phonKanaAlt = ["ka","ki","ku","ke","ko","kya","kyu","kye","kyo","ta","ti","tu","te","to","tya","tyu","tye","tyo","cha","chi","chu","che","cho","cha","chu","che","cho"];
J2x_$kr.krKanaAlt = ["가","기","구","게","고","갸","규","계","교","다","디","두","데","도","댜","듀","뎨","됴","자","지","주","제","조","쟈","쥬","졔","죠"];
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);
